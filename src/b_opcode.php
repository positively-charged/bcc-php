<?php

define( 'pc_none', 0 );
define( 'pc_terminate', 1 );
define( 'pc_suspend', 2 );
define( 'pc_push_number', 3 );
define( 'pc_lspec1', 4 );
define( 'pc_lspec2', 5 );
define( 'pc_lspec3', 6 );
define( 'pc_lspec4', 7 );
define( 'pc_lspec5', 8 );
define( 'pc_lspec1_direct', 9 );
define( 'pc_lspec2_direct', 10 );
define( 'pc_lspec3_direct', 11 );
define( 'pc_lspec4_direct', 12 );
define( 'pc_lspec5_direct', 13 );
define( 'pc_add', 14 );
define( 'pc_sub', 15 );
define( 'pc_mul', 16 );
define( 'pc_div', 17 );
define( 'pc_mod', 18 );
define( 'pc_eq', 19 );
define( 'pc_ne', 20 );
define( 'pc_lt', 21 );
define( 'pc_gt', 22 );
define( 'pc_le', 23 );
define( 'pc_ge', 24 );
define( 'pc_assign_script_var', 25 );
define( 'pc_assign_map_var', 26 );
define( 'pc_assign_world', 27 );
define( 'pc_push_script_var', 28 );
define( 'pc_push_map_var', 29 );
define( 'pc_push_world_var', 30 );
define( 'pc_add_script_var', 31 );
define( 'pc_add_map_var', 32 );
define( 'pc_add_world_var', 33 );
define( 'pc_sub_script_var', 34 );
define( 'pc_sub_map_var', 35 );
define( 'pc_sub_world_var', 36 );
define( 'pc_mul_script_var', 37 );
define( 'pc_mul_map_var', 38 );
define( 'pc_mul_world_var', 39 );
define( 'pc_div_script_var', 40 );
define( 'pc_div_map_var', 41 );
define( 'pc_div_world_var', 42 );
define( 'pc_mod_script_var', 43 );
define( 'pc_mod_map_var', 44 );
define( 'pc_mod_world_var', 45 );
define( 'pc_inc_script_var', 46 );
define( 'pc_inc_map_var', 47 );
define( 'pc_inc_world_var', 48 );
define( 'pc_dec_script_var', 49 );
define( 'pc_dec_map_var', 50 );
define( 'pc_dec_world_var', 51 );
define( 'pc_goto', 52 );
define( 'pc_if_goto', 53 );
define( 'pc_drop', 54 ); // Pop stack.
define( 'pc_delay', 55 );
define( 'pc_delay_direct', 56 );
define( 'pc_random', 57 );
define( 'pc_random_direct', 58 );
define( 'pc_thing_count', 59 );
define( 'pc_thing_count_direct', 60 );
define( 'pc_tag_wait', 61 );
define( 'pc_tag_wait_direct', 62 );
define( 'pc_poly_wait', 63 );
define( 'pc_poly_wait_direct', 64 );
define( 'pc_change_floor', 65 );
define( 'pc_change_floor_direct', 66 );
define( 'pc_change_ceiling', 67 );
define( 'pc_change_ceiling_direct', 68 );
define( 'pc_restart', 69 );
define( 'pc_and_logical', 70 );
define( 'pc_or_logical', 71 );
define( 'pc_and_bitwise', 72 );
define( 'pc_or_bitwise', 73 );
define( 'pc_eor_bitwise', 74 );
define( 'pc_negate_logical', 75 );
define( 'pc_lshift', 76 );
define( 'pc_rshift', 77 );
define( 'pc_unary_minus', 78 );
define( 'pc_if_not_goto', 79 );
define( 'pc_line_side', 80 );
define( 'pc_script_wait', 81 );
define( 'pc_script_wait_direct', 82 );
define( 'pc_clear_line_special', 83 );
define( 'pc_case_goto', 84 );
define( 'pc_begin_print', 85 );
define( 'pc_end_print', 86 );
define( 'pc_print_string', 87 );
define( 'pc_print_number', 88 );
define( 'pc_print_character', 89 );
define( 'pc_player_count', 90 );
define( 'pc_game_type', 91 );
define( 'pc_game_skill', 92 );
define( 'pc_timer', 93 );
define( 'pc_sector_sound', 94 );
define( 'pc_ambient_sound', 95 );
define( 'pc_sound_sequence', 96 );
define( 'pc_set_line_texture', 97 );
define( 'pc_set_line_blocking', 98 );
define( 'pc_set_line_special', 99 );
define( 'pc_thing_sound', 100 );
define( 'pc_end_print_bold', 101 );
define( 'pc_activator_sound', 102 );
define( 'pc_local_ambient_sound', 103 );
define( 'pc_set_line_monster_blocking', 104 );
define( 'pc_player_blue_skull', 105 );
define( 'pc_player_red_skull', 106 );
define( 'pc_player_yellow_skull', 107 );
define( 'pc_player_master_skull', 108 );
define( 'pc_player_blue_card', 109 );
define( 'pc_player_red_card', 110 );
define( 'pc_player_yellow_card', 111 );
define( 'pc_player_master_card', 112 );
define( 'pc_player_black_skull', 113 );
define( 'pc_player_silver_skull', 114 );
define( 'pc_player_gold_skull', 115 );
define( 'pc_player_black_card', 116 );
define( 'pc_player_silver_card', 117 );
define( 'pc_is_multiplayer', 118 );
define( 'pc_player_team', 119 );
define( 'pc_player_health', 120 );
define( 'pc_player_armor_points', 121 );
define( 'pc_player_frags', 122 );
define( 'pc_player_expert', 123 );
define( 'pc_blue_team_count', 124 );
define( 'pc_red_team_count', 125 );
define( 'pc_blue_team_score', 126 );
define( 'pc_red_team_score', 127 );
define( 'pc_is_one_flag_ctf', 128 );
define( 'pc_get_invasion_wave', 129 );
define( 'pc_get_invasion_state', 130 );
define( 'pc_print_name', 131 );
define( 'pc_music_change', 132 );
define( 'pc_console_command_direct', 133 );
define( 'pc_console_command', 134 );
define( 'pc_single_player', 135 );
define( 'pc_fixed_mul', 136 );
define( 'pc_fixed_div', 137 );
define( 'pc_set_gravity', 138 );
define( 'pc_gravity_direct', 139 );
define( 'pc_set_air_control', 140 );
define( 'pc_set_air_control_direct', 141 );
define( 'pc_clear_inventory', 142 );
define( 'pc_give_inventory', 143 );
define( 'pc_give_inventory_direct', 144 );
define( 'pc_take_inventory', 145 );
define( 'pc_take_inventory_direct', 146 );
define( 'pc_check_inventory', 147 );
define( 'pc_check_inventory_direct', 148 );
define( 'pc_spawn', 149 );
define( 'pc_spawn_direct', 150 );
define( 'pc_spawn_spot', 151 );
define( 'pc_spawn_spot_direct', 152 );
define( 'pc_set_music', 153 );
define( 'pc_set_music_direct', 154 );
define( 'pc_local_set_music', 155 );
define( 'pc_local_set_music_direct', 156 );
define( 'pc_print_fixed', 157 );
define( 'pc_print_localized', 158 );
define( 'pc_more_hud_message', 159 );
define( 'pc_opt_hud_message', 160 );
define( 'pc_end_hud_message', 161 );
define( 'pc_end_hud_message_bold', 162 );
define( 'pc_set_style', 163 );
define( 'pc_set_style_direct', 164 );
define( 'pc_set_font', 165 );
define( 'pc_set_font_direct', 166 );
define( 'pc_push_byte', 167 );
define( 'pc_lspec1_direct_b', 168 );
define( 'pc_lspec2_direct_b', 169 );
define( 'pc_lspec3_direct_b', 170 );
define( 'pc_lspec4_direct_b', 171 );
define( 'pc_lspec5_direct_b', 172 );
define( 'pc_delay_direct_b', 173 );
define( 'pc_random_direct_b', 174 );
define( 'pc_push_bytes', 175 );
define( 'pc_push_2bytes', 176 );
define( 'pc_push_3bytes', 177 );
define( 'pc_push_4bytes', 178 );
define( 'pc_push_5bytes', 179 );
define( 'pc_set_thing_special', 180 );
define( 'pc_assign_global_var', 181 );
define( 'pc_push_global_var', 182 );
define( 'pc_add_global_var', 183 );
define( 'pc_sub_global_var', 184 );
define( 'pc_mul_global_var', 185 );
define( 'pc_div_global_var', 186 );
define( 'pc_mod_global_var', 187 );
define( 'pc_inc_global_var', 188 );
define( 'pc_dec_global_var', 189 );
define( 'pc_fade_to', 190 );
define( 'pc_fade_range', 191 );
define( 'pc_cancel_fade', 192 );
define( 'pc_play_movie', 193 );
define( 'pc_set_floor_trigger', 194 );
define( 'pc_set_ceiling_trigger', 195 );
define( 'pc_get_actor_x', 196 );
define( 'pc_get_actor_y', 197 );
define( 'pc_get_actor_z', 198 );
define( 'pc_start_translation', 199 );
define( 'pc_translation_range1', 200 );
define( 'pc_translation_range2', 201 );
define( 'pc_end_translation', 202 );
define( 'pc_call', 203 );
define( 'pc_call_discard', 204 );
define( 'pc_return_void', 205 );
define( 'pc_return_val', 206 );
define( 'pc_push_map_array', 207 );
define( 'pc_assign_map_array', 208 );
define( 'pc_add_map_array', 209 );
define( 'pc_sub_map_array', 210 );
define( 'pc_mul_map_array', 211 );
define( 'pc_div_map_array', 212 );
define( 'pc_mod_map_array', 213 );
define( 'pc_inc_map_array', 214 );
define( 'pc_dec_map_array', 215 );
define( 'pc_dup', 216 );
define( 'pc_swap', 217 );
define( 'pc_write_to_ini', 218 );
define( 'pc_get_from_ini', 219 );
define( 'pc_sin', 220 );
define( 'pc_cos', 221 );
define( 'pc_vector_angle', 222 );
define( 'pc_check_weapon', 223 );
define( 'pc_set_weapon', 224 );
define( 'pc_tag_string', 225 );
define( 'pc_push_world_array', 226 );
define( 'pc_assign_world_array', 227 );
define( 'pc_add_world_array', 228 );
define( 'pc_sub_world_array', 229 );
define( 'pc_mul_world_array', 230 );
define( 'pc_div_world_array', 231 );
define( 'pc_mod_world_array', 232 );
define( 'pc_inc_world_array', 233 );
define( 'pc_dec_world_array', 234 );
define( 'pc_push_global_array', 235 );
define( 'pc_assign_global_array', 236 );
define( 'pc_add_global_array', 237 );
define( 'pc_sub_global_array', 238 );
define( 'pc_mul_global_array', 239 );
define( 'pc_div_global_array', 240 );
define( 'pc_mod_global_array', 241 );
define( 'pc_inc_global_array', 242 );
define( 'pc_dec_global_array', 243 );
define( 'pc_set_marine_weapon', 244 );
define( 'pc_set_actor_property', 245 );
define( 'pc_get_actor_property', 246 );
define( 'pc_player_number', 247 );
define( 'pc_activator_tid', 248 );
define( 'pc_set_marine_sprite', 249 );
define( 'pc_get_screen_width', 250 );
define( 'pc_get_screen_height', 251 );
define( 'pc_thing_projectile2', 252 );
define( 'pc_strlen', 253 );
define( 'pc_set_hud_size', 254 );
define( 'pc_get_cvar', 255 );
define( 'pc_case_goto_sorted', 256 );
define( 'pc_set_result_value', 257 );
define( 'pc_get_line_row_offset', 258 );
define( 'pc_get_actor_floor_z', 259 );
define( 'pc_get_actor_angle', 260 );
define( 'pc_get_sector_floor_z', 261 );
define( 'pc_get_sector_ceiling_z', 262 );
define( 'pc_lspec5_result', 263 );
define( 'pc_get_sigil_pieces', 264 );
define( 'pc_get_level_info', 265 );
define( 'pc_change_sky', 266 );
define( 'pc_player_in_game', 267 );
define( 'pc_player_is_bot', 268 );
define( 'pc_set_camera_to_texture', 269 );
define( 'pc_end_log', 270 );
define( 'pc_get_ammo_capacity', 271 );
define( 'pc_set_ammo_capacity', 272 );
define( 'pc_print_map_char_array', 273 );
define( 'pc_print_world_char_array', 274 );
define( 'pc_print_global_char_array', 275 );
define( 'pc_set_actor_angle', 276 );
define( 'pc_grap_input', 277 );
define( 'pc_set_mouse_pointer', 278 );
define( 'pc_move_mouse_pointer', 279 );
define( 'pc_spawn_projectile', 280 );
define( 'pc_get_sector_light_level', 281 );
define( 'pc_get_actor_ceiling_z', 282 );
define( 'pc_get_actor_position_z', 283 );
define( 'pc_clear_actor_inventory', 284 );
define( 'pc_give_actor_inventory', 285 );
define( 'pc_take_actor_inventory', 286 );
define( 'pc_check_actor_inventory', 287 );
define( 'pc_thing_count_name', 288 );
define( 'pc_spawn_spot_facing', 289 );
define( 'pc_player_class', 290 );
define( 'pc_and_script_var', 291 );
define( 'pc_and_map_var', 292 );
define( 'pc_and_world_var', 293 );
define( 'pc_and_global_var', 294 );
define( 'pc_and_map_array', 295 );
define( 'pc_and_world_array', 296 );
define( 'pc_and_global_array', 297 );
define( 'pc_eor_script_var', 298 );
define( 'pc_eor_map_var', 299 );
define( 'pc_eor_world_var', 300 );
define( 'pc_eor_global_var', 301 );
define( 'pc_eor_map_array', 302 );
define( 'pc_eor_world_array', 303 );
define( 'pc_eor_global_array', 304 );
define( 'pc_or_script_var', 305 );
define( 'pc_or_map_var', 306 );
define( 'pc_or_world_var', 307 );
define( 'pc_or_global_var', 308 );
define( 'pc_or_map_array', 309 );
define( 'pc_or_world_array', 310 );
define( 'pc_or_global_array', 311 );
define( 'pc_ls_script_var', 312 );
define( 'pc_ls_map_var', 313 );
define( 'pc_ls_world_var', 314 );
define( 'pc_ls_global_var', 315 );
define( 'pc_ls_map_array', 316 );
define( 'pc_ls_world_array', 317 );
define( 'pc_ls_global_array', 318 );
define( 'pc_rs_script_var', 319 );
define( 'pc_rs_map_var', 320 );
define( 'pc_rs_world_var', 321 );
define( 'pc_rs_global_var', 322 );
define( 'pc_rs_map_array', 323 );
define( 'pc_rs_world_array', 324 );
define( 'pc_rs_global_array', 325 );
define( 'pc_get_player_info', 326 );
define( 'pc_change_level', 327 );
define( 'pc_sector_damage', 328 );
define( 'pc_replace_textures', 329 );
define( 'pc_negate_binary', 330 );
define( 'pc_get_actor_pitch', 331 );
define( 'pc_set_actor_pitch', 332 );
define( 'pc_print_bind', 333 );
define( 'pc_set_actor_state', 334 );
define( 'pc_thing_damage2', 335 );
define( 'pc_use_inventory', 336 );
define( 'pc_use_actor_inventory', 337 );
define( 'pc_check_actor_ceiling_texture', 338 );
define( 'pc_check_actor_floor_texture', 339 );
define( 'pc_get_actor_light_level', 340 );
define( 'pc_set_mugshot_state', 341 );
define( 'pc_thing_count_sector', 342 );
define( 'pc_thing_count_name_sector', 343 );
define( 'pc_check_player_camera', 344 );
define( 'pc_morph_actor', 345 );
define( 'pc_unmorph_actor', 346 );
define( 'pc_get_player_input', 347 );
define( 'pc_classify_actor', 348 );
define( 'pc_print_binary', 349 );
define( 'pc_print_hex', 350 );
define( 'pc_call_func', 351 );
define( 'pc_save_string', 352 );